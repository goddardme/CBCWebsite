# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                           controllers.MainController.index()
GET     /javascriptRoutes             controllers.MainController.javascriptRoutes

# UserController
GET     /login                      controllers.UserController.index(returnUrl: String ?= "none")
POST    /login                      controllers.UserController.login()
GET		/logout						controllers.UserController.logout()
GET		/register					controllers.UserController.createStudent()
POST	/register					controllers.UserController.createStudent_submit()
GET		/editRegistration			controllers.UserController.editInstructor()
POST	/editRegistration			controllers.UserController.editInstructor_submit()
GET		/viewStudent				controllers.UserController.view(userId: Long)
GET		/editStudent				controllers.UserController.editStudent(userId: Long)
POST	/editStudent				controllers.UserController.editStudent_submit(userId: Long)

# GeneratorController
GET     /viewCode                   controllers.GeneratorController.execute(group1: String)

# ClassController
GET		/viewClass					controllers.ClassController.view(classId: Long)
GET		/createClass				controllers.ClassController.create()
POST	/createClass				controllers.ClassController.create_submit()
GET		/editClass					controllers.ClassController.edit(classId: Long)
POST	/editClass					controllers.ClassController.edit_submit(classId: Long)
POST	/deleteClass				controllers.ClassController.delete(classId: Long)
POST	/deployClass				controllers.ClassController.deploy(classId: Long)
GET		/browseClasses				controllers.ClassController.browse(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET		/enrollStudents				controllers.ClassController.enrollStudents(classId: Long, restrictByGrade: Boolean ?= true)
POST	/enrollStudents				controllers.ClassController.enroll(classId: Long, studentId: Long)
POST	/unenrollStudents			controllers.ClassController.unenroll(classId: Long, studentId: Long)
GET		/classStudents				controllers.ClassController.classStudents(classId: Long)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
GET     /webjars/*file              controllers.WebJarAssets.at(file)